#---------------------------------------------------------------------------------------------------
# Register definitions for block: {{ blk.name }}
#
{%- if blk.info %}
# {{ blk.info | trim | replace('\n', '\n# ') }}
#
{%- endif %}
# NOTE: This file was autogenerated on {{ now }} by the command:
# {{ cmdline }}
#---------------------------------------------------------------------------------------------------
__all__ = (
    '{{ blk.name_lower }}_block',
)

from regio.regmap import *

#---------------------------------------------------------------------------------------------------
class {{ blk.name_lower }}_block(Structure):
    {%- if blk.info %}
    '''
    {{ blk.info | trim | replace('\n', '\n    ') }}
    '''
    {%- endif %}

{%- set non_none_regs = 0 -%} {#- Tracking for empty blocks. -#}
{%- for reg in blk.regs: %}
    {%- if reg.access == 'none': -%}
        {%- if loop.last and non_none_regs == 0: %}
    ...
        {%- endif -%}
        {%- continue -%}
    {%- else -%}
        {%- set non_none_regs = non_none_regs + 1 -%} {#- Tracking for empty blocks. -#}
    {%- endif -%}

    {%- if reg.count and reg.count > 1: %}
    class {{ reg.name_lower }}(Array, dimensions=({{ reg.count }},), offset={{ reg.offset // 4 }}): # 0x{{ '{:08X}'.format(reg.offset) }}
        class value(Register, access='{{ reg.access | upper }}'):{%- if not reg.fields: %} ... {%- endif %}
        {%- if reg.fields: %}
            {%- for field in reg.fields: %}
            class {{ field.name_lower }}(Field, access='{{ field.access | upper }}', width={{ field.width }}, offset={{ field.offset }}): ...
            {%- endfor %}
        {%- endif %}
    {%- else: %}
    class {{ reg.name_lower }}(Register, access='{{ reg.access | upper }}', offset={{ reg.offset // 4 }}): {%- if not reg.fields and not reg.info: %} ... {%- endif %} # 0x{{ '{:08X}'.format(reg.offset) }}
        {%- if reg.info %}
        '''
        {{ reg.info | trim | replace('\n', '\n        ') }}
        '''
        {%- endif %}

        {%- if reg.fields: %}
            {%- for field in reg.fields: %}
                {%- if field.access == 'none': %}
                    {%- continue %}
                {%- endif %}
        class {{ field.name_lower }}(Field, access='{{ field.access | upper }}', offset={{ field.offset }}, width={{ field.width }}): {%- if not field.info %} ... {%- endif -%}
                {%- if field.info %}
            '''
            {{ field.info | trim | replace('\n', '\n            ') }}
            '''
                {%- endif %}
            {%- endfor %}
        {%- endif %}
    {%- endif %}
{%- endfor %}

