/*
 *  Toplevel definitions for device: {{ top.name }}
 *    PCI Vendor: {{ "{:02X}".format(top.pci_vendor) }}
 *    PCI Device: {{ "{:02X}".format(top.pci_device) }}
 *
 *  {{ top.info | replace('\n', '\n *  ') }}
 *
 *  NOTE: This file was autogenerated by regio
 */

#if !defined(INCLUDE_{{ top.name_upper }}_TOP_H)
#define INCLUDE_{{ top.name_upper }}_TOP_H 1

#include <stdint.h>
#include <stdbool.h>

#define {{ top.name_upper }}_PCI_VENDOR {{ "0x{:02X}".format(top.pci_vendor)}}
#define {{ top.name_upper }}_PCI_DEVICE {{ "0x{:02X}".format(top.pci_device)}}

{% for barid, bar in top.bars.items(): %}
/*
 * Includes for blocks in BAR {{ barid }} ({{ bar.name }})  {{ bar.desc }}
 */
{%-  for blk in bar.blocks: %}
{%-    if 'block' in blk: %}
#include "{{ blk.block.name_lower }}_block.h"
{%-    endif %}
{%-  endfor %}

{% endfor %}

{% for barid, bar in top.bars.items(): %}
/*
 * Toplevel struct for BAR {{ barid }} ({{ bar.name }})  {{ bar.desc }}
 */
#define {{ top.name_upper }}_BAR{{ barid }}_SIZE_BYTES {{ bar.size_bytes }}
#define {{ top.name_upper }}_BAR{{ barid }}_SIZE_PAGES {{ bar.size_pages }}

struct {{ top.name_lower }}_{{ bar.name_lower }} {
{%-  for blk in bar.blocks: %}
{%-    if 'anon' in blk: %}
  uint8_t {{ "{:40}".format("{}[{}];".format(blk.anon, blk.count)) }}
{%-    else %}
{%-      if blk.as: %}
  struct  {{ "{:40}".format("{}_block {};".format(blk.block.name_lower, blk.as_lower)) }}  // {{ "0x{:08X}".format(blk.offset) }}
{%-      else: %}
  struct  {{ "{:40}".format("{}_block {};".format(blk.block.name_lower, blk.block.name_lower)) }}  // {{ "0x{:08X}".format(blk.offset) }}
{%-      endif %}
{%-    endif %}
{%-  endfor %}
};

{% endfor %}

#endif // INCLUDE_{{ top.name_upper }}_TOP_H

